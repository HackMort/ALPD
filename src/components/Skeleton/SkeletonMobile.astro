---
type Props = {
    type: string;
};

const data = [
    {
        active: true,
        title: "Neurologic<sup>1,6,19</sup>",
        icon: "/assets/images/hpp-profile/skeleton/neuro-icon-active.svg",
        text: "Fatigue, headache, sleep disturbances",
        image1: "/assets/images/hpp-profile/skeleton/neuro-img.png",
        imageAlt1: "Neurologic image",
        image2: "",
        imageAlt2: "",
        condition: "",
    },
    {
        active: false,
        title: "Dental<sup>1,9</sup>",
        icon: "/assets/images/hpp-profile/skeleton/dental-icon-active.svg",
        text: "Premature tooth loss with root intact, abnormal dentition, periodontal disease",
        image1: "/assets/images/hpp-profile/skeleton/dental-xray-one.png",
        imageAlt1: "Dental x-ray one",
        image2: "/assets/images/hpp-profile/skeleton/dental-xray-two.png",
        imageAlt2: "Dental x-ray two",
        condition:
            "Reproduced with permission from Bloch-Zupan A. <em>Int Jour Paedtr Dent. 2016;26:426-438 and Reibel A. Orphanet J Rare Dis. 2009;4:6.</em>",
    },
    {
        active: false,
        title: "Muscular<sup>1,9,10,18</sup>",
        icon: "/assets/images/hpp-profile/skeleton/muscular-icon-active.svg",
        text: "Symptoms include muscle weakness, pain, waddling gait, difficulty walking, reduced grip force assessed by digital hand dynamometer",
        image1: "/assets/images/hpp-profile/skeleton/muscular-img.png",
        imageAlt1: "Muscular image",
        image2: "",
        imageAlt2: "",
        condition: "Jandl NM. <em>Calcif Tissue Int.</em> 2021;108(3):288-301.",
    },
    {
        active: false,
        title: "Rheumatic<sup>1,6,9,11-14</sup>",
        icon: "/assets/images/hpp-profile/skeleton/rheumatic-icon-active.svg",
        text: "Calcific periarthritis, chondrocalcinosis, fibromyalgia, pain, pseudogout, osteoarthritis, rheumatoid arthritis, spondyloarthritis, and collagenosis",
        image1: "/assets/images/hpp-profile/skeleton/rheumatic-img.png",
        imageAlt1: "Rheumatic image",
        image2: "",
        imageAlt2: "",
        condition:
            "Hogler W. <em>BMC Musculoskeletal Disorders.</em> 2019;29(1):80-88. Feurstein J. <em>Orphanet J Rare Dis.</em> 2022;17(1):435-442.",
    },
    {
        active: false,
        title: "Orthopedic/skeletal<sup>1,3,9,14,17</sup>",
        icon: "/assets/images/hpp-profile/skeleton/orthopedic-icon-active.svg",
        text: "Fractures, pseudofractures, rickets/osteomalacia, osteopenia, severe hypomineralization, bone/joint pain, skeletal deformities",
        image1: "/assets/images/hpp-profile/skeleton/orthopedic-img.png",
        imageAlt1: "Orthopedic image",
        image2: "",
        imageAlt2: "",
        condition: "Bianchi ML.<em> Osteoporos Int.</em> 2020;31(8):1445-1460.",
    },
];

const { type } = Astro.props;
---

<section class="skeleton skeleton--mobile">
    {
        data.map((section, index) => (
            <div
                class={`skeleton__content--mobile skeleton__content${
                    section.active ? " skeleton__content--active" : ""
                } `}
            >
                <article class="skeleton__container">
                    <div class="skeleton__header">
                        <div
                            class="skeleton__header--title"
                            set:html={section.title}
                        >
                            <img
                                class="skeleton__header--icon"
                                src={section.icon}
                                alt={section.title}
                            />
                        </div>
                        <div class="skeleton__header--arrows">
                            <div class="skeleton__header--arrow">
                                <img
                                    class="skeleton__header--arrow-left"
                                    src="/assets/images/hpp-profile/skeleton/arrow-left.svg"
                                    alt="Arrow left"
                                />
                            </div>
                            <div class="skeleton__header--arrow">
                                <img
                                    class="skeleton__header--arrow-right"
                                    src="/assets/images/hpp-profile/skeleton/arrow-right.svg"
                                    alt="Arrow right"
                                />
                            </div>
                        </div>
                    </div>
                    <div class="skeleton__content--body">
                        <p
                            class="skeleton__content--text"
                            set:html={section.text}
                        />
                        <div class="skeleton__content--img">
                            <img src={section.image1} alt={section.imageAlt1} />
                            {section.image2 && (
                                <img
                                    src={section.image2}
                                    alt={section.imageAlt2}
                                />
                            )}
                        </div>
                        <div
                            class="skeleton__content--conditions"
                            set:html={section.condition}
                        />
                    </div>
                </article>
                <div
                    class={`skeleton__footer${
                        section.active ? " skeleton__footer--active" : ""
                    } `}
                >
                    <div class="skeleton__footer--dots">
                        {data.map((dot, indexDot) =>
                            index === indexDot ? (
                                <div class="skeleton__footer--dot skeleton__footer--dot--active" />
                            ) : (
                                <div class="skeleton__footer--dot" />
                            )
                        )}
                    </div>
                </div>
            </div>
        ))
    }
</section>

<script>
    //Vanilla js code
    const sections = document.querySelectorAll(".skeleton__content--mobile");
    const footers = document.querySelectorAll(".skeleton__footer");
    const dots = document.querySelectorAll(".skeleton__footer--dot");

    const arrowLefts = document.querySelectorAll(
        ".skeleton__header--arrow-left"
    );
    const arrowRights = document.querySelectorAll(
        ".skeleton__header--arrow-right"
    );

    arrowRights.forEach((arrowRight) => {
        arrowRight.addEventListener("click", () => {
            let foundActive = false;
            let indexNext = 0;

            sections.forEach((section, index) => {
                if (section.classList.contains("skeleton__content--active")) {
                    section.classList.remove("skeleton__content--active");
                    indexNext = index + 1;
                    foundActive = true;
                }
            });

            if (!foundActive) {
                sections[0].classList.add("skeleton__content--active"); // If no active element was found, set the first element as active
                footers[0].classList.add("skeleton__footer--active");
            } else if (indexNext < sections.length) {
                console.log(indexNext);
                sections[indexNext].classList.add("skeleton__content--active"); // If the active element was found and it's not the last element, set the next element as active
                footers[indexNext].classList.add("skeleton__footer--active");
            } else {
                sections[0].classList.add("skeleton__content--active"); // If the active element was found and it's the last element, set the first element as active
                footers[0].classList.add("skeleton__footer--active");
            }
        });
    });

    arrowLefts.forEach((arrowLeft) => {
        arrowLeft.addEventListener("click", () => {
            let foundActive = false;
            let indexPrev = 0;

            sections.forEach((section, index) => {
                if (section.classList.contains("skeleton__content--active")) {
                    section.classList.remove("skeleton__content--active");
                    indexPrev = index - 1;
                    foundActive = true;
                }
            });

            if (!foundActive) {
                sections[sections.length - 1].classList.add(
                    "skeleton__content--active"
                ); // If no active element was found, set the last element as active
            } else if (indexPrev >= 0) {
                sections[indexPrev].classList.add("skeleton__content--active"); // If the active element was found and it's not the first element, set the previous element as active
            } else {
                sections[sections.length - 1].classList.add(
                    "skeleton__content--active"
                ); // If the active element was found and it's the first element, set the last element as active
            }
        });
    });

    dots.forEach((dot, index) => {
        dot.addEventListener("click", () => {
            //Each dot has an index, so we can use it to know which section to show but are only 5 sections, so we need to use the index % 5 to get the correct index
            const indexToShow = index % 5;

            sections.forEach((section) => {
                section.classList.remove("skeleton__content--active");
            });

            sections[indexToShow].classList.add("skeleton__content--active");
            footers[indexToShow].classList.add("skeleton__footer--active");
        });
    });
</script>
